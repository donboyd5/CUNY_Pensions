---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Unfunded state and local pension liabilities as percentage of GDP

```{r}
#| label: setup
#| eval: true
#| include: false
#| echo: false

source(here::here("r", "libraries.r"))

```

## Flow of funds data

```{r}
#| label: fof-data
#| eval: false
#| include: false
#| echo: false

# Steps:
#  1. download latest fof data zip fle
#    go to the fof landing page https://www.federalreserve.gov/releases/z1/
#    hover over csv, copy url of latest release
#    create a variable with that release name, such as:
#      fget <- https://www.federalreserve.gov/releases/z1/20230608/z1_csv_files.zip"
#    use code below to download to a temporary file
#  2. look at what's in the package
#    currently this is a csv folder and a data_dictionary folder
#  3. get and save variable information from all_sectors_levels_q.txt file
#    get and save tibble with dictionary
#    get tibble with unique variable info
#  4. get data, add variable info, and save

## 1. download latest fof package ----
fget <- "https://www.federalreserve.gov/releases/z1/20230608/z1_csv_files.zip"
zfn <- path_file(fget)
zpath <- here::here("data", zfn)
temp <- tempfile()
download.file(fget, temp, mode="wb")
download.file(fget, zpath, mode="wb")

## 2. look at what's in the package ----

tmpdir <- here::here("data", "temp")
unzip(zpath, exdir=tmpdir)
csvdir <- path(tmpdir, "csv")
dictdir <- path(tmpdir, "data_dictionary")
dir_ls(dictdir)
vroom(dictdir)
dir_ls(csvdir)
vroom(dir_ls(dictdir), id="file")

fcsv <- function(fname){
  vroom(fname, id="file")
}

fn <- dir_ls(csvdir)[1]
df <- fcsv(fn)

vars <- vroom(dictdir,
              delim="\t",
              col_names = c("series", "description", "location", "table", "units"),
              col_types="c",
              id="file",
              progress=TRUE) |> 
  mutate(file=path_file(file))


lfiles <- unzip(temp, list=TRUE) # data frame of files in the zip archive
lfiles
csvfiles <- str_subset(lfiles$Name, "csv/")
ddfiles <- str_subset(lfiles$Name, "data_dictionary/")

# 3. get and save variable information from all_sectors_levels_q.txt file ----
# get and save tibble with dictionary
vars <- read_tsv(unz(temp, "data_dictionary/all_sectors_levels_q.txt"),
                 col_names = c("series", "description", "rowcol", "table", "units"))

vars <- vroom(unz(temp, "data_dictionary"),
              delim="\t",
              col_names = c("series", "description", "location", "table", "units"),
              col_types="c",
              id="file",
              progress=TRUE) |> 
  mutate(file=path_file(file))
# files <- fs::dir_ls(glob = "flights_*tsv")

unz(temp, "data_dictionary")

library(archive)
archive_read(temp)
read_csv(archive_read(temp, "data_dictionary"))
d <- tempfile()
archive_extract(temp, d)
list.files(d)
unlink(d)

d <- tempdir()
archive_extract(temp, d, "data_dictionary/*.txt")
list.files(d)
unlink(d)


saveRDS(vars, here::here("data", "fofq_dict.rds"))

# get tibble with unique variable info
uvars <- vars |> 
  select(series, description, units) |> 
  distinct()

## 4. get data, add variable info, and save ----
# note, there are duplicate columns which vroom renames
df1 <- vroom(unz(temp, "csv/all_sectors_levels_q.csv"))

# get rid of duplicates
df2 <- df1 |> 
  mutate(date=as.Date(as.yearqtr(date, format = "%Y:Q%q"))) |> 
  pivot_longer(-date, names_to = "series") |> 
  arrange(date, series)

df3 <- df2 |> 
  mutate(series=gsub("(Q).*", "\\1", series)) |> 
  distinct() |> 
  mutate(value=as.numeric(value))

# merge variable information
df4 <- df3 |>
  left_join(uvars,
            by = join_by(series))
skim(df4)
saveRDS(df4, here::here("data", "fofq_data.rds"))


# FL224090045.Q
# State and local government employee defined benefit retirement funds; total financial assets
# Line 1	Table L.120.b State and Local Government Employee Retirement Funds: Defined Benefit Plans
# Millions of dollars; not seasonally adjusted
vars |> filter(series=="FL224090045.Q")
vars |> filter(str_detect(series, "224090045"))


```


## Unfunded liabilities plot

Source: Flow of funds, Table L.120.b, `FL223073045.Q`


```{r}
#| label: ufl-data
#| eval: false
#| include: false
#| echo: false

df <- readRDS(here::here("data", "fofextract.rds")) |> 
  separate(shortname, into=c("type", "vname")) 
count(df, vname)

pdata <- df |> 
  filter(name=="FL223073045.Q" |vname=="gdp") |> 
  select(date, vname, value) |> 
  pivot_wider(names_from = vname) |>  
  mutate(pct=claims / gdp)

saveRDS(pdata, here::here("data", "ufl_data.rds"))

```


```{r}
#| label: ufl-plot
#| eval: true
#| include: true
#| echo: false
#| fig-width: 11
#| fig-height: 6

pdata <- readRDS(here::here("data", "ufl_data.rds"))

gtitle1 <- "Unfunded liability of state and local government defined benefit pension plans"
gtitle2 <- "As percentage of Gross Domestic Product"
srcnote <- "\nSource: Federal Reserve Board, Financial Accounts of the United States, Tables L.120.b and F.2
Note: Liabilities are as valued by the Bureau of Economic Analysis, not actuaries."

brk1 <- seq.Date(as.Date("1900-01-01"),
                 as.Date("2020-01-01"),
                 "5 years")
brk2 <- seq.Date(as.Date("2020-01-01"),
                 as.Date("2026-01-01"),
                 "2 years")
brks <- c(brk1, brk2)

x90 <-  theme(axis.text.x = element_text(angle = -90, vjust = 0, hjust=0.5))

p <- pdata  |> 
  filter(year(date)>=1955, year(date)<=2023) |> 
  ggplot(aes(x=date, y=pct)) +
  geom_line(linewidth=rel(1), colour="blue") +
  geom_point(size=rel(1), colour="blue") +
  geom_hline(yintercept = 0, linewidth=rel(1.1), colour="black") +
  scale_y_continuous(name="Percent (%)", 
                     breaks=seq(-1, 1, .02),
                     labels = label_percent(accuracy=1)) +
  scale_x_date(name=NULL,
               breaks=brks,
               minor_breaks = seq.Date(as.Date("1900-01-01"),
                                       as.Date("2030-01-01"),
                                       "1 year"),
               date_labels = "%Y",
               expand = expansion(mult = c(0.05, 0.02))) +
  labs(caption=srcnote) +
  ggtitle(label=gtitle1, subtitle=gtitle2) +
  theme_bw() +
  theme(plot.title = element_text(size=rel(1.3), face="bold")) +
  theme(plot.subtitle = element_text(size=rel(1), face="bold")) +
  theme(axis.title = element_text(face="bold", size=rel(1))) +
  theme(axis.text = element_text(face="bold", size=rel(1))) +
  theme(plot.caption = element_text(hjust=0, size=rel(.8))) +
  theme(panel.grid.major.x = element_line(linewidth=0.3, colour="lightgrey"),
        panel.grid.minor.x = element_line(linetype="dashed", linewidth=0.1, colour="#d9d9d9")) +
  x90
  
p
ggsave(here::here("results", "ufl_gdp.png"), p, width=11, height=6, units="in", scale=1)

# gdp |> 
#   filter(year(date) %in% c(2010, 2021))


```

